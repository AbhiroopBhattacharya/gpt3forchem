# AUTOGENERATED! DO NOT EDIT! File to edit: ../notebooks/00_data.ipynb.

# %% auto 0
__all__ = ['POLYMER_FEATURES', 'discretize', 'get_polymer_data', 'get_photoswitch_data', 'get_mof_data', 'get_core_mof_data',
           'get_opv_data']

# %% ../notebooks/00_data.ipynb 2
import os
from collections import Counter

import pandas as pd

from .helpers import HashableDataFrame

_THIS_DIR = os.path.abspath(os.path.dirname(os.path.abspath("")))

# %% ../notebooks/00_data.ipynb 4
def discretize(
    df: pd.DataFrame, col: str, n_bins: int = 5, new_name: str = None, labels = None
) -> None:
    """Adds a new column to the dataframe with the discretized values of the column."""
    if new_name is None:
        new_name = col + "_cat"
    if labels is None:
        labels = ["very small", "small", "medium", "large", "very large"]

    df[new_name] = pd.cut(
        df[col],
        n_bins,
        labels=labels,
    )


# %% ../notebooks/00_data.ipynb 6
POLYMER_FEATURES = [
    "num_[W]",
    "max_[W]",
    "num_[Tr]",
    "max_[Tr]",
    "num_[Ta]",
    "max_[Ta]",
    "num_[R]",
    "max_[R]",
    "[W]",
    "[Tr]",
    "[Ta]",
    "[R]",
    "rel_shannon",
    "length",
]


# %% ../notebooks/00_data.ipynb 7
def get_polymer_data(
        datadir="../data" # path to folder with data files
    ): 
    return HashableDataFrame(pd.read_csv(os.path.join(datadir, "polymers.csv")))


# %% ../notebooks/00_data.ipynb 13
def get_photoswitch_data(
        datadir="../data" # path to folder with data files
    ):
    """By default we drop the rows without E isomer pi-pi* transition wavelength."""
    df = pd.read_csv(os.path.join(datadir, "photoswitches.csv"))
    df.dropna(subset=["E isomer pi-pi* wavelength in nm"], inplace=True)
    df.drop_duplicates(
        subset=["SMILES"], inplace=True
    )  # not sure how and if they did this in the initial work. There are certainly duplicates, e.g. C[N]1C=CC(=N1)N=NC2=CC=CC=C2 (see top)
    df.reset_index(inplace=True)
    return HashableDataFrame(df)


# %% ../notebooks/00_data.ipynb 26
def get_mof_data(datadir="../data"):  # path to folder with data files
    return HashableDataFrame(pd.read_csv(os.path.join(datadir, "mof.csv")))


# %% ../notebooks/00_data.ipynb 36
def get_core_mof_data(datadir="../data"):  # path to folder with data files
    return HashableDataFrame(pd.read_csv(os.path.join(datadir, "core_mof.csv")))


# %% ../notebooks/00_data.ipynb 49
def get_opv_data(
        datadir="../data" # path to folder with data files
    ):
    """Load the OPV dataset.
    """
    df = pd.read_csv(os.path.join(datadir, "opv.csv"))
    df =  df.groupby(['SMILES', 'selfies']).mean().reset_index()
    return HashableDataFrame(df)
